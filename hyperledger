buat smart contract :
Artifact > src > fabcar
buat multiple smart contract dalam satu channel, artinya dalam satu channel kita bisa membuat dua fitur/fungsi yg menghasilkan dua smart contract yg berbeda (misal fitur input data dan fitur transaksi) :
Artifact > src > document

< ---------------------------------- >
NOTES NONTON VIDEO
- setiap Function (step2) ada ID buat nyimpen datanya / jadi qr code ?


yg harus dinyalain :
1. buat API : cd ke file mongo/api 2.0 > nvm use 12 > pm2 start app.js
2. buat hyperledger :
    - cd artifact/ca-operation
    - docker-compose up -d
    - ganti folder cd artifact
    - docker-compose up -d


dicatat cuma sampai pedagang -> konsumen cuma scan barcode
aktor
yg dipake cuma deploybawang sisanya bawaan tutorial
hyperledger nya di file Artifact
artifaCt > src > github > bawangmerah = chaincode, tempat bikin model (atribut setiap fitur). selain itu juga untuk buat fungsi/fitur yg digunakan pada setiap transaksi
untuk createdAT menggunakan unix timestamp
getTxiD => fungsi dari hyperledger bisa di searching disitu
fungsi2 tadi (yg dibuat di bawangmerah) bakal dipanggil lagi di api > app > invoke
certificate authority => artifaCt > channel > create > docker
hyperledger selain nyimpen didalam blok tapi juga nyimpen di couchDB buat ngequery berdasarkan transaction ID. disimpen di : artifaCt > channel > docker

< ---------------------------------- >
FUNGSI-FUNGSI PADA HYPERLEDGER :
- GetTxID() = fungsi untuk bikin ID 
- SetEvent() = memberi pesan tambahan pada data yang akan dikirim
- PutState() = menimpa data yang sudah dibuat
- GetState() = mengambil data dengan key sebuah ID




<!-------------------------------------------------------------------------------------------------------------->
FUNGSI PADA APLIKASI MANGO JS
1. DAFTAR ASSET BENIH (PENANGKAR) *
2. UPDATE ASSET BENIH (PENANGKAR) *
3. CREATE TRANSAKSI (PENANGKAR -> PETANI) *
4. DETAIL TANAM BENIH (PETANI) *
5. DETAIL PANEN HASIL (PETANI)
6. CREATE TRANSAKSI (PETANI -> PENANGKAR) *
7. CREATE TRANSAKSI KECIL (PENANGKAR -> PEDAGANG KECIL) 
8. CREATE TRANSAKSI BESAR (PENANGKAR -> PEDAGANG BESAR) *
9. DETAIL TRANSAKSI (PEDAGANG - - -> PEMBELI) 

- ADD BAWANG ASSET
- GET USER BY ADDRESS
- ISCONFIRM === TRUE
- ISREJECTED === TRUE AND RETRIEVE ASSET 
- GET BAWANGID
- POST/CREATE USER IN BLOCKCHAIN
- GET USER & BAWANG BY ID
- GET BAWANG FOR QUERY
- 3 FUNC ?

DAFTAR LINK API YANG BAKAL DIPAKAI (FIX) :
- Bagian Authorization
1. register :
    - fungsi : POST
    - halaman user daftar akun
    - input : userName, password, email, namaLengkap, noTelp, tglLahir, nik, role, alamat
    - output : status ok (accept), status error (failed)
    - link :


2. login :
    - fungsi : POST
    - halaman user login masuk ke aplikasi
    - input : userName, password
    - output : selamat datang {user} (accept), acces_token, refresh_token
    - link :

3. get all data :
    - fungsi : GET
    - melakukan get semua data user
    - input : -
    - output : all data setiap user
    - link :

4. profile
    - fungsi : GET
    - melakukan get data dari akun yang melakukan login
    - input : -
    - output : userName, password, email, namaLengkap, noTelp, tglLahir, nik, role, alamat
    - link :

5. proses invoke
    - fungsi : POST
    - proses mengirimkan data pada blockchain
    - input : fungsi invoke, peers (alamat tujuan), chaincodeName, channelName, argumen (semua inputan yang akan dikirim)
    - output : Id transaksi
    - list fungsi yg dibikin :
    1. CreateBenih = menambahkan informasi tentang benih (penangkar)
    2. addBenihKuantitasbyID = update/menambah kuantitas dari benih (penangkar)
    3. CreateTrxBawangByPenangkar = transaksi antara penangkar dan petani (penangkar)
    4. PlantBenih = proses mananam benih (petani)
    5. harvestBawang = proses panen dari bawang (petani)
    6. UpdateBawangTrxByPetani = transaksi petani dan pengumpul (petani)
    7. UpdateBawangTrxByPengumpul = transaksi pengumpul dan pedagang (pengumpul)
    8. ConfirmTrxByID = konfirmasi transaksi diterima
    9. RejectTrxByID = konfirmasi transaksi ditolak 

6. proses query
    - fungsi : GET
    - proses menjalankan fungsi query
    - input : peers, fungsi invoke (fcn), argumen (json)



GetManggaByID :
get informasi sebuah jalur yang sudah sampai transaksi terakhir
args = ID --> IDTX4 (id terakhir yg diperoleh adalah id transaksi terakhir)
peer = penangkar dll
fcn = GetManggaByID

GetUserByID :
get informasi profile user di blockchain
args = ID --> ID yg bersangkutan (profile yg pengen dicari)
peer = penangkar dll
fcn = GetUserByID

GetManggaForQuery :
daftar asset yang pernah dibuat oleh satu user
fcn = GetManggaForQuery
peer = penangkar dll
args = namaPengirim, isAsset

GetHistoryForAssetByID :
semua history transaksi ?
args = ID --> IDTX4 (id terakhir yg diperoleh adalah id transaksi terakhir)
peer = penangkar dll
fcn = GetManggaByID


