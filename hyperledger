buat smart contract :
Artifact > src > fabcar
buat multiple smart contract dalam satu channel, artinya dalam satu channel kita bisa membuat dua fitur/fungsi yg menghasilkan dua smart contract yg berbeda (misal fitur input data dan fitur transaksi) :
Artifact > src > document

< ---------------------------------- >
NOTES NONTON VIDEO
- setiap Function (step2) ada ID buat nyimpen datanya / jadi qr code ?


yg harus dinyalain :
1. buat API : cd ke file mongo/api 2.0 > nvm use 12 > pm2 start app.js
2. buat hyperledger :
    - cd artifact/ca-operation
    - docker-compose up -d
    - ganti folder cd artifact
    - docker-compose up -d


dicatat cuma sampai pedagang -> konsumen cuma scan barcode
aktor
yg dipake cuma deploybawang sisanya bawaan tutorial
hyperledger nya di file Artifact
artifaCt > src > github > bawangmerah = chaincode, tempat bikin model (atribut setiap fitur). selain itu juga untuk buat fungsi/fitur yg digunakan pada setiap transaksi
untuk createdAT menggunakan unix timestamp
getTxiD => fungsi dari hyperledger bisa di searching disitu
fungsi2 tadi (yg dibuat di bawangmerah) bakal dipanggil lagi di api > app > invoke
certificate authority => artifaCt > channel > create > docker
hyperledger selain nyimpen didalam blok tapi juga nyimpen di couchDB buat ngequery berdasarkan transaction ID. disimpen di : artifaCt > channel > docker

< ---------------------------------- >
FUNGSI-FUNGSI PADA HYPERLEDGER :
- GetTxID() = fungsi untuk bikin ID 
- SetEvent() = memberi pesan tambahan pada data yang akan dikirim
- PutState() = menimpa data yang sudah dibuat
- GetState() = mengambil data dengan key sebuah ID




<!-------------------------------------------------------------------------------------------------------------->
FUNGSI PADA APLIKASI MANGO JS
1. DAFTAR ASSET BENIH (PENANGKAR) *
2. UPDATE ASSET BENIH (PENANGKAR) *
3. CREATE TRANSAKSI (PENANGKAR -> PETANI) *
4. DETAIL TANAM BENIH (PETANI) *
5. DETAIL PANEN HASIL (PETANI)
6. CREATE TRANSAKSI (PETANI -> PENANGKAR) *
7. CREATE TRANSAKSI KECIL (PENANGKAR -> PEDAGANG KECIL) 
8. CREATE TRANSAKSI BESAR (PENANGKAR -> PEDAGANG BESAR) *
9. DETAIL TRANSAKSI (PEDAGANG - - -> PEMBELI) 

- ADD BAWANG ASSET
- GET USER BY ADDRESS
- ISCONFIRM === TRUE
- ISREJECTED === TRUE AND RETRIEVE ASSET 
- GET BAWANGID
- POST/CREATE USER IN BLOCKCHAIN
- GET USER & BAWANG BY ID
- GET BAWANG FOR QUERY
- 3 FUNC ?

DAFTAR LINK API YANG BAKAL DIPAKAI (FIX) :
- Bagian Authorization
1. register :
    - fungsi : POST
    - halaman user daftar akun
    - input : userName, password, email, namaLengkap, noTelp, tglLahir, nik, role, alamat
    - output : status ok (accept), status error (failed)
    - link :


2. login :
    - fungsi : POST
    - halaman user login masuk ke aplikasi
    - input : userName, password
    - output : selamat datang {user} (accept), acces_token, refresh_token
    - link :

3. get all data :
    - fungsi : GET
    - melakukan get semua data user
    - input : -
    - output : all data setiap user
    - link :

4. profile
    - fungsi : GET
    - melakukan get data dari akun yang melakukan login
    - input : -
    - output : userName, password, email, namaLengkap, noTelp, tglLahir, nik, role, alamat
    - link :

5. proses invoke
    - fungsi : POST
    - proses mengirimkan data pada blockchain
    - input : fungsi invoke, peers (alamat tujuan), chaincodeName, channelName, argumen (semua inputan yang akan dikirim)
    - output : Id transaksi
    - list fungsi yg dibikin :
    1. CreateBenih = menambahkan informasi tentang benih (penangkar)
    2. addBenihKuantitasbyID = update/menambah kuantitas dari benih (penangkar)
    3. CreateTrxBawangByPenangkar = transaksi antara penangkar dan petani (penangkar)
    4. PlantBenih = proses mananam benih (petani)
    5. harvestBawang = proses panen dari bawang (petani)
    6. UpdateBawangTrxByPetani = transaksi petani dan pengumpul (petani)
    7. UpdateBawangTrxByPengumpul = transaksi pengumpul dan pedagang (pengumpul)
    8. ConfirmTrxByID = konfirmasi transaksi diterima
    9. RejectTrxByID = konfirmasi transaksi ditolak 

6. proses query
    - fungsi : GET
    - proses menjalankan fungsi query
    - input : peers, fungsi invoke (fcn), argumen (json)



GetManggaByID :
get id yg dituju, kalo ID tx dapet tx nya, kalo ID benih dapet benih nya
args = ID --> IDTX4 (id terakhir yg diperoleh adalah id transaksi terakhir)
peer = penangkar dll
fcn = GetManggaByID

GetUserByID :
get informasi profile user di blockchain
args = ID --> ID yg bersangkutan (profile yg pengen dicari)
peer = penangkar dll
fcn = GetUserByID

GetManggaForQuery :
- penerima : petani, confirmed : true ---> tx1 (semua transaksi penangkar - petani yg sudah confirmed)
- penerima : petani, confirmed : false ---> semua tx1 (semua transaksi yg masuk ke petani dan belum di confirmed)
- pengirim : petani, confirmed : false ---> tx2 (semua transaksi yg dikirim, dan belum confirmed)
- username, role ---> biodata, mirip GetUserByID
- pengirim : penangkar, asset : true ---> semua benihID yg didaftarkan
daftar asset yang pernah dibuat oleh satu user
fcn = GetManggaForQuery
peer = penangkar dll
args = namaPengirim, isAsset

GetHistoryForAssetByID :
- transaksi akhir? mirip GetManggaByID
args = ID --> IDTX4 (id terakhir yg diperoleh adalah id transaksi terakhir)
peer = penangkar dll
fcn = GetManggaByID

<!-------------------------------------------------------------------------------------------------------------->

# PENANGKAR

1. fungsi mendaftarkan aset benih
method : POST
link : http://localhost:4000/sc/channels/channel1/chaincodes/manggach1_cc
body : {
    "fcn": "RegistrasiBenih",
    "peers": [
        "peer0.penangkar.example.com",
        "peer0.petani.example.com",
        "peer0.pengumpul.example.com",
        "peer0.pedagang.example.com"
    ],
    "chaincodeName": "manggach1_cc",
    "channelName": "channel1",
    "args": [
        "{\"VarietasBenih\":\"arumanis\",\"UmurBenih\":\"3 hari\",\"kuantitasBenihKg\": 4.2}"
    ]
}

2. menambah kuantitas benih
method : POST
link : http://localhost:4000/sc/channels/channel1/chaincodes/manggach1_cc
body : {
    "fcn": "AddKuantitasBenihByID",
    "peers": [
        "peer0.penangkar.example.com",
        "peer0.petani.example.com",
        "peer0.pengumpul.example.com",
        "peer0.pedagang.example.com"
    ],
    "chaincodeName": "manggach1_cc",
    "channelName": "channel1",
    "args": [
        "10", 
        "benihID"
    ]
}

3. fungsi membuat transaksi penangkar ke petani
method : POST
link : http://localhost:4000/sc/channels/channel1/chaincodes/manggach1_cc
body : {
    "fcn": "CreateTrxManggaByPenangkar",
    "peers": [
        "peer0.penangkar.example.com",
        "peer0.petani.example.com",
        "peer0.pengumpul.example.com",
        "peer0.pedagang.example.com"
    ],
    "chaincodeName": "manggach1_cc",
    "channelName": "channel1",
    "args": [
        "{\"NamaPengirim\":\"koharPenangkar\",\"NamaPenerima\":\"beniPetani\",\"kuantitasBenihKg\": 4.2,\"HargaBenihKg\":10000,\"CaraPembayaran\":\"tunai\"}", 
        "benihID"
    ]
}

4. daftar benih asset yang telah dibuat
method : GET
link : http://localhost:4000/sc/channels/channel1/chaincodes/manggach1_cc/?peer=peer0.penangkar.example.com&fcn=GetManggaForQuery&args=["{\"selector\":{\"NamaPengirim\":\"koharPenangkar\", \"isAsset\":true}}"]
peer : peer0.penangkar.example.com
fcn  : GetManggaForQuery
argn : ["{\"selector\":{\"NamaPengirim\":\"koharPenangkar\", \"isAsset\":true}}"]

5. daftar transaksi yg dikirim
method : GET
link : http://localhost:4000/sc/channels/channel1/chaincodes/manggach1_cc/?peer=peer0.penangkar.example.com&fcn=GetManggaForQuery&args=["{\"selector\":{\"NamaPengirim\":\"koharPenangkar\", \"isConfirmed\":false}}"]
peer : peer0.penangkar.example.com
fcn  : GetManggaForQuery
argn : ["{\"selector\":{\"NamaPengirim\":\"koharPenangkar\", \"isConfirmed\":false}}"]


# PETANI

1. daftar transaksi yg masuk dan belum di accept
method : GET
link : http://localhost:4000/sc/channels/channel1/chaincodes/manggach1_cc/?peer=peer0.penangkar.example.com&fcn=GetManggaForQuery&args=["{\"selector\":{\"NamaPenerima\":\"beniPetani\", \"isConfirmed\":false}}"]
peer : peer0.penangkar.example.com
fcn  : GetManggaForQuery
argn : ["{\"selector\":{\"NamaPenerima\":\"beniPetani\", \"isConfirmed\":false}}"]

2. fungsi untuk tanam benih
method : POST
link : http://localhost:4000/sc/channels/channel1/chaincodes/manggach1_cc
body : {
    "fcn": "TanamBenih",
    "peers": [
        "peer0.penangkar.example.com",
        "peer0.petani.example.com",
        "peer0.pengumpul.example.com",
        "peer0.pedagang.example.com"
    ],
    "chaincodeName": "manggach1_cc",
    "channelName": "channel1",
    "args": [
        "{\"Pupuk\":\"kompos\",\"LokasiLahan\":\"cikabayan\"}", 
        "id dari confirm TxID1"
    ]
}

3. fungsi untuk panen mangga
method : POST
link : http://localhost:4000/sc/channels/channel1/chaincodes/manggach1_cc
body : {
    "fcn": "PanenMangga",
    "peers": [
        "peer0.penangkar.example.com",
        "peer0.petani.example.com",
        "peer0.pengumpul.example.com",
        "peer0.pedagang.example.com"
    ],
    "chaincodeName": "manggach1_cc",
    "channelName": "channel1",
    "args": [
        "{\"Ukuran\":\"lonjong\",\"Pestisida\":\"abcd\",\"KadarAir\":\"sedang\",\"Perlakuan\":\"baik\",\"Produktivitas\":\"subur\",\"KuantitasManggaKg\": 100}",
        "id manggaID"
    ]
}

4. fungsi transaksi petani dan pengumpul
method : POST
link : http://localhost:4000/sc/channels/channel1/chaincodes/manggach1_cc
body : {
    "fcn": "CreateTrxManggaByPetani",
    "peers": [
        "peer0.penangkar.example.com",
        "peer0.petani.example.com",
        "peer0.pengumpul.example.com",
        "peer0.pedagang.example.com"
    ],
    "chaincodeName": "manggach1_cc",
    "channelName": "channel1",
    "args": [
        "{\"NamaPengirim\":\"beniPetani\",\"NamaPenerima\":\"adulPengumpul\",\"KuantitasManggaKg\": 100,\"HargaManggaKg\":30000,\"CaraPembayaran\":\"tunai\"}", 
        "id manggaID"
    ]
}

5. daftar manggaID yang sudah dibuat
method : GET
link : http://localhost:4000/sc/channels/channel1/chaincodes/manggach1_cc/?peer=peer0.petani.example.com&fcn=GetManggaForQuery&args=["{\"selector\":{\"NamaPengirim\":\"beniPetani\", \"isAsset\":true}}"]
peer : peer0.petani.example.com
fcn  : GetManggaForQuery
argn : ["{\"selector\":{\"NamaPengirim\":\"beniPetani\", \"isAsset\":true}}"]

6. daftar transaksi yg dikirim ke pengumpul
method : GET
link : http://localhost:4000/sc/channels/channel1/chaincodes/manggach1_cc/?peer=peer0.petani.example.com&fcn=GetManggaForQuery&args=["{\"selector\":{\"NamaPengirim\":\"beniPetani\", \"isConfirmed\":false}}"]
peer : peer0.petani.example.com
fcn  : GetManggaForQuery
argn : ["{\"selector\":{\"NamaPengirim\":\"beniPetani\", \"isConfirmed\":false}}"]

# PENGUMPUL 

1. daftar transaksi yg masuk dari petani dan belum di accept
method : GET
link : http://localhost:4000/sc/channels/channel1/chaincodes/manggach1_cc/?peer=peer0.petani.example.com&fcn=GetManggaForQuery&args=["{\"selector\":{\"NamaPenerima\":\"adulPengumpul\", \"isConfirmed\":false}}"]
peer : peer0.petani.example.com
fcn  : GetManggaForQuery
argn : ["{\"selector\":{\"NamaPenerima\":\"adulPengumpul\", \"isConfirmed\":false}}"]

2. fungsi transaksi pengumpul dan pedagang
method : POST
link : http://localhost:4000/sc/channels/channel1/chaincodes/manggach1_cc
body : {
    "fcn": "CreateTrxManggaByPengumpul",
    "peers": [
        "peer0.penangkar.example.com",
        "peer0.petani.example.com",
        "peer0.pengumpul.example.com",
        "peer0.pedagang.example.com"
    ],
    "chaincodeName": "manggach1_cc",
    "channelName": "channel1",
    "args": [
        "{\"NamaPengirim\":\"adulPengumpul\",\"NamaPenerima\":\"dadangPedagang\",\"KuantitasManggaKg\": 100,\"HargaManggaKg\":40000,\"TeknikSorting\":\"bubble sort\",\"MetodePengemasan\":\"karung beras\",\"Pengangkutan\":\"peti kemas\",\"CaraPembayaran\":\"tunai\"}", 
        "id TxID2"
    ]
}

3. daftar transaksi yg dikirim ke pedagang
method : GET
link : http://localhost:4000/sc/channels/channel1/chaincodes/manggach1_cc/?peer=peer0.pengumpul.example.com&fcn=GetManggaForQuery&args=["{\"selector\":{\"NamaPengirim\":\"adulPengumpul\", \"isConfirmed\":false}}"]
peer : peer0.pengumpul.example.com
fcn  : GetManggaForQuery
argn : ["{\"selector\":{\"NamaPengirim\":\"adulPengumpul\", \"isConfirmed\":false}}"]

# PEDAGANG 

1. daftar transaksi yg masuk dari pengumpul dan belum di accept
method : GET
link : http://localhost:4000/sc/channels/channel1/chaincodes/manggach1_cc/?peer=peer0.pengumpul.example.com&fcn=GetManggaForQuery&args=["{\"selector\":{\"NamaPenerima\":\"adulPengumpul\", \"isConfirmed\":false}}"]
peer : peer0.pengumpul.example.com
fcn  : GetManggaForQuery
argn : ["{\"selector\":{\"NamaPenerima\":\"adulPengumpul\", \"isConfirmed\":false}}"]

2. fungsi transaksi pedagang dan konsumsi
method : POST
link : http://localhost:4000/sc/channels/channel1/chaincodes/manggach1_cc
body : {
    "fcn": "CreateTrxManggaByPedagang",
    "peers": [
        "peer0.penangkar.example.com",
        "peer0.petani.example.com",
        "peer0.pengumpul.example.com",
        "peer0.pedagang.example.com"
    ],
    "chaincodeName": "manggach1_cc",
    "channelName": "channel1",
    "args": [
        "{\"NamaPengirim\":\"dadangPedagang\",\"NamaPenerima\":\"omenKonsumen\",\"KuantitasManggaKg\": 100,\"HargaManggaKg\":50000,\"CaraPembayaran\":\"tunai\"}", 
        "id TxID3"
    ]
}

3. daftar transaksi yg dikirim ke konsumen
method : GET
link : http://localhost:4000/sc/channels/channel1/chaincodes/manggach1_cc/?peer=peer0.pengumpul.example.com&fcn=GetManggaForQuery&args=["{\"selector\":{\"NamaPengirim\":\"dadangPedagang\", \"isConfirmed\":false}}"]
peer : peer0.pedagang.example.com
fcn  : GetManggaForQuery
argn : ["{\"selector\":{\"NamaPengirim\":\"dadangPedagang\", \"isConfirmed\":false}}"]


# bonus

1. konfirmasi transaksi (petani, pengumpul, pedagang)
method : POST
link : http://localhost:4000/sc/channels/channel1/chaincodes/manggach1_cc
body : {
    "fcn": "ConfirmTrxByID",
    "peers": [
        "peer0.penangkar.example.com",
        "peer0.petani.example.com",
        "peer0.pengumpul.example.com",
        "peer0.pedagang.example.com"
    ],
    "chaincodeName": "manggach1_cc",
    "channelName": "channel1",
    "args": [
        "ID TxID bersangkutan"
    ]
}

2. tolak transaksi (petani, pengumpul, pedagang)
method : POST
link : http://localhost:4000/sc/channels/channel1/chaincodes/manggach1_cc
body : {
    "fcn": "RejectTrxByID",
    "peers": [
        "peer0.penangkar.example.com",
        "peer0.petani.example.com",
        "peer0.pengumpul.example.com",
        "peer0.pedagang.example.com"
    ],
    "chaincodeName": "manggach1_cc",
    "channelName": "channel1",
    "args": [
        "ID TxID yg bersangkutan",
        "ID TxID yg sebelumnya",
        "10",
        "kuantitas tidak sesuai"
    ]
}